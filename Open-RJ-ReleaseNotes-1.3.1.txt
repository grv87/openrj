================================================================================

File:     release-history.txt

Purpose:  Brief description of the releases of the Open-RJ libraries.

Author:   Matthew Wilson, Synesis Software Pty Ltd.

          Copyright 2004-2005, Synesis Software Pty Ltd.
          All rights reserved.

www:      http://www.synesis.com.au/software
          http://www.recls.org/

Created:  23rd May 2005
Updated:  23rd May 2005

================================================================================
================================================================================


================================================================================
23rd May 2005 : Open-RJ 1.2.1 => 1.3.1
--------------------------------------------------------------------------------

The main change is that record comments are now made available in the API, in 
the form of the 'comment' member of the ORJRecordA structure, and the 
ORJ_Record_GetCommentA() function.

There is also a new auto-link header, which causes compilers that support such
behaviour to insert comment records that direct their linker to link to the
appropriate Open-RJ library, e.g. openrj.vc71.mt.debug.lib, without requiring
explicit specification in the linker command. Some developers prefer this kind
of automatic behaviour, and now have this facility if they so wish just by
including openrj_implicit_link.h

Other changes are as follows:

 - c_str_ptr() shims are added for ORJStringA. (See chapter 19 of Imperfect C++
   (http://imperfectcplusplus.com/) for an explanation of the Shims concept)
 - c_str_data() and c_str_len() shims are provided in addition to c_str_ptr().
   These are of general use, but are particularly useful with STLSoft's
   basic_string_view template

Changes to the mappings are as follows:

 C++ mapping:
  - the headers are separated out, one per class. They are all fully configured,
    i.e. including openrj/cpp/filedatabase.hpp includes openrj/cpp/record.hpp
    and openrj/cpp/field.hpp
  - addition of (in-)equality operators (operator == and operator !=) for Field
    class
  - addition of String typedef within openrj::cpp namespace, which is actually 
    a typedef for stlsoft::basic_string_view<char> (for providing views onto
    the string information within database fields).
  - addition of Record::GetComment(), Record::HasField(char const *name),
    Record::HasField(char const *name, char const *value),
    Record::HasFieldWithValue(char const *value) methods
  - Record::operator []() overloads taking string objects now return String
    rather than ORJString

 STL mapping:
  - addition of record::comment() method

 Python mapping:
  - addition of comment property to record type

 Ruby mapping:
  - addition of comment property to record type

================================================================================

