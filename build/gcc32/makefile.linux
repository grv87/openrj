################################################################################
# File:		makefile
#
# Purpose:	Makefile for GCC 3.4 for the Synesis System Tools
#
# Created:	18th May 2004
# Updated:	15th August 2004
#
# Copyright:	Synesis Software Pty Ltd, 2004. All rights reserved
#
################################################################################

################################################################################
# Macros

CC						=	gcc
CPPC					=	g++
RC						=	rc
LD						=	g++

INCLUDES				=	-I../../include -I$(SYNESIS_DEV)/IncSS -I$(SYNESIS_DEV)/IncPriv -I$(SYNESIS_DEV)/Include -I$(STLSOFT_INCLUDE)
RC_INCLUDES				=	-I$(SYNESIS_DEV)/Products/SysTools/include -I$(SYNESIS_DEV)/IncSS -I$(SYNESIS_DEV)/IncPriv -I$(SYNESIS_DEV)/Include -I$(STLSOFT_INCLUDE)

LIBRARIES				=	#-lkernel32 -ladvapi32 -luser32 -lgdi32 -lshell32 -lversion -lwininet -lunixem.gcc34 -Xlinker -L $(UNIXEM)/lib

CXC_D_NO_UNICODE_		=	-D_SYB_NO_UNICODE
CXC_D_NO_DEBUG_			=	-DNDEBUG
CXC_D_INTERNAL_BUILD_	=	-D_SYNSOFT_INTERNAL_BUILD 
CXC_D_OS_				=	-Dlinux -DUNIX

# C compilation
CC_F_NOLOGO				=	
CC_F_OPTIMISE			=	-O7
CC_F_MAX_WARN			=	-Wall
CC_F_WARN_AS_ERROR		=	-Werror

CC_DEFINES				=	$(CXC_D_NO_UNICODE_) $(CXC_D_NO_DEBUG_) $(CXC_D_INTERNAL_BUILD_) $(CXC_D_OS_)
CC_ARGS					=	-c $(CC_DEFINES) $(CC_F_NOLOGO) $(CC_F_OPTIMISE) $(CC_F_MAX_WARN) $(CC_F_WARN_AS_ERROR)

# C++ compilation
CPPC_F_NOLOGO			=	
CPPC_F_EXCEPTIONS		=	
CPPC_F_OPTIMISE			=	-O7
CPPC_F_MAX_WARN			=	#-W-non-virtual-dtor
CPPC_F_WARN_AS_ERROR	=	#-Werror

CPPC_DEFINES			=	$(CXC_D_NO_UNICODE_) $(CXC_D_NO_DEBUG_) $(CXC_D_INTERNAL_BUILD_) $(CXC_D_OS_)
CPPC_ARGS				=	-c $(CPPC_DEFINES) $(CPPC_F_NOLOGO) $(CPPC_F_EXCEPTIONS) $(CPPC_OPTIMISE) $(CPPC_F_MAX_WARN) $(CPPC_F_WARN_AS_ERROR)

# Resource compilation
RC_F_NOLOGO				=	
RC_F_OPTIMISE			=	
RC_F_MAX_WARN			=	
RC_F_WARN_AS_ERROR		=	

RC_ARGS					=	-Dlinux -DUNIX $(RC_F_NOLOGO) $(RC_F_OPTIMISE) $(RC_F_MAX_WARN) $(RC_F_WARN_AS_ERROR)

# Linking
LD_F_NOLOGO				=	

LD_ARGS					=	$(LD_F_NOLOGO) 

# Targets
 
TARGETS			=			\
				joinln	\
				lnunique	\
				nrngen	\
				nvx	\
				rdempty	\
				slsw	\
				strbl	\
				whereis	\
						\

#				pathchk	\
#				intcopy	\
#				dskclear	\
#				iwhereis	\

################################################################################
# Targets
 
target:	$(TARGETS)

bin-update:	target
	intcopy -O -f * $(BIN)

web-update:	target
	intcopy -O -f * $(WEB_ROOT)/source/SystemTools/Win32

clean:
	-@rm -f *.o
	-@rm -f $(TARGETS)

# Supporting files
showver.o:	../../src/showver.c
	$(CC) $(CC_ARGS) $(INCLUDES) -o $@ $?
MWRegUtl.o:	$(SYNESIS_DEV)/include/MWRegUtl.cpp
	$(CPPC) $(CPPC_ARGS) $(INCLUDES) -o $@ $?
MWVerInf.o:	$(SYNESIS_DEV)/CommCode/Windows/MWVerInf.cpp
	$(CPPC) $(CPPC_ARGS) $(INCLUDES) -o $@ $?
MLCmdArg.o:	$(SYNESIS_DEV)/CommCode/Utility/MLCmdArg.c
	$(CC) $(CC_ARGS) $(INCLUDES) -o $@ $?
MWClpbrd.o:	$(SYNESIS_DEV)/CommCode/Windows/MWClpbrd.c
	$(CC) $(CC_ARGS) $(INCLUDES) -o $@ $?
MLMain.o:	$(SYNESIS_DEV)/CommCode/Utility/MLMain.cpp
	$(CPPC) $(CPPC_ARGS) $(INCLUDES) -o $@ $?
RunProc.o: $(SYNESIS_DEV)/CommCode/Utility/RunProc.c
	$(CC) $(CC_ARGS) $(INCLUDES) -o $@ $?
derrpath.o: $(SYNESIS_DEV)/CommCode/crt/derrpath.c
	$(CC) $(CC_ARGS) $(INCLUDES) -o $@ $?
dirend.o: $(SYNESIS_DEV)/CommCode/crt/dirend.c
	$(CC) $(CC_ARGS) $(INCLUDES) -o $@ $?
direndch.o: $(SYNESIS_DEV)/CommCode/crt/direndch.c
	$(CC) $(CC_ARGS) $(INCLUDES) -o $@ $?
makepath.o: $(SYNESIS_DEV)/CommCode/crt/makepath.c
	$(CC) $(CC_ARGS) $(INCLUDES) -o $@ $?
splpath.o: $(SYNESIS_DEV)/CommCode/crt/splpath.c
	$(CC) $(CC_ARGS) $(INCLUDES) -o $@ $?
strcch.o: $(SYNESIS_DEV)/CommCode/crt/strcch.c
	$(CC) $(CC_ARGS) $(INCLUDES) -o $@ $?
streqlen.o: $(SYNESIS_DEV)/CommCode/crt/streqlen.c
	$(CC) $(CC_ARGS) $(INCLUDES) -o $@ $?


# clipboard
clipboard.o:	../../clipboard/clipboard.cpp
	$(CPPC) $(CPPC_ARGS) $(INCLUDES) -o $@ $?
clipboard:	clipboard.o MWClpbrd.o showver.o
	$(LD) $(LD_ARGS) -o $@ clipboard.o MWClpbrd.o showver.o $(LIBRARIES)

# dskclear
dskclear.o:	../../dskclear/dskclear.cpp
	$(CPPC) $(CPPC_ARGS) $(INCLUDES) -o $@ $?
dskclear:	dskclear.o showver.o
	$(LD) $(LD_ARGS) -o $@ dskclear.o showver.o $(LIBRARIES)

# exec
exec.o:	../../exec/exec.cpp
	$(CPPC) $(CPPC_ARGS) $(INCLUDES) -o $@ $?
exec:	exec.o showver.o MLMain.o MLCmdArg.o RunProc.o
	$(LD) $(LD_ARGS) -o $@ exec.o showver.o MLMain.o MLCmdArg.o RunProc.o $(LIBRARIES)

# exitwin
exitwin.o:	../../exitwin/exitwin.cpp
	$(CPPC) $(CPPC_ARGS) $(INCLUDES) -o $@ $?
exitwin:	exitwin.o showver.o MLMain.o MLCmdArg.o RunProc.o
	$(LD) $(LD_ARGS) -o $@ exitwin.o showver.o MLMain.o MLCmdArg.o RunProc.o $(LIBRARIES)

# hardlink
hardlink.o:	../../hardlink/hardlink.cpp
	$(CPPC) $(CPPC_ARGS) $(INCLUDES) -o $@ $?
hardlink:	hardlink.o showver.o
	$(LD) $(LD_ARGS) -o $@ hardlink.o showver.o $(LIBRARIES)

# intcopy
intcopy.o:	../../intcopy/intcopy.cpp
	$(CPPC) $(CPPC_ARGS) $(INCLUDES) -o $@ $?
intcopy:	intcopy.o showver.o
	$(LD) $(LD_ARGS) -o $@ intcopy.o showver.o $(LIBRARIES)

# iwhereis
iwhereis.o:	../../iwhereis/iwhereis.cpp
	$(CPPC) $(CPPC_ARGS) $(INCLUDES) -o $@ $?
iwhereis:	iwhereis.o showver.o #derrpath.o dirend.o direndch.o makepath.o splpath.o strcch.o streqlen.o
	$(LD) $(LD_ARGS) -o $@ iwhereis.o showver.o #derrpath.o dirend.o direndch.o makepath.o splpath.o strcch.o streqlen.o $(LIBRARIES)

# joinln
joinln.o:	../../joinln/joinln.cpp
	$(CPPC) $(CPPC_ARGS) $(INCLUDES) -o $@ $?
joinln:	joinln.o showver.o
	$(LD) $(LD_ARGS) -o $@ joinln.o showver.o $(LIBRARIES)

# lnunique
lnunique.o:	../../lnunique/lnunique.cpp
	$(CPPC) $(CPPC_ARGS) $(INCLUDES) -o $@ $?
lnunique:	lnunique.o showver.o
	$(LD) $(LD_ARGS) -o $@ lnunique.o showver.o $(LIBRARIES)

# nrngen
nrngen.o:	../../nrngen/nrngen.c
	$(CC) $(CC_ARGS) $(INCLUDES) -o $@ $?
nrngen:	nrngen.o showver.o
	$(LD) $(LD_ARGS) -o $@ nrngen.o showver.o $(LIBRARIES)

# nvx
nvx.o:	../../nvx/nvx.c
	$(CC) $(CC_ARGS) $(INCLUDES) -o $@ $?
nvx_util.o:	../../nvx/nvx_util.cpp
	$(CPPC) $(CPPC_ARGS) $(INCLUDES) -o $@ $?
nvx:	nvx.o nvx_util.o showver.o
	$(LD) $(LD_ARGS) -o $@ nvx.o nvx_util.o showver.o $(LIBRARIES)

# osver
osver.o:	../../osver/osver.cpp
	$(CPPC) $(CPPC_ARGS) $(INCLUDES) -o $@ $?
osver:	osver.o showver.o
	$(LD) $(LD_ARGS) -o $@ osver.o showver.o $(LIBRARIES)

# osverw
osverw.o:	../../osverw/osverw.c
	$(CC) $(CC_ARGS) $(INCLUDES) -o $@ $?
osverw:	osverw.o showver.o
	$(LD) $(LD_ARGS) -o $@ osverw.o showver.o $(LIBRARIES)

# pathchk
pathchk.o:	../../pathchk/pathchk.cpp
	$(CPPC) $(CPPC_ARGS) $(INCLUDES) -o $@ $?
pathchk:	pathchk.o showver.o
	$(LD) $(LD_ARGS) -o $@ pathchk.o showver.o $(LIBRARIES)

# pausew
pausew.o:	../../pausew/pausew.cpp
	$(CPPC) $(CPPC_ARGS) $(INCLUDES) -o $@ $?
pausew:	pausew.o showver.o MLMain.o MLCmdArg.o
	$(LD) $(LD_ARGS) -o $@ pausew.o showver.o MLMain.o MLCmdArg.o $(LIBRARIES)

# perlp
install.o:	../../perlp/install.cpp
	$(CPPC) $(CPPC_ARGS) $(INCLUDES) -o $@ $?
perlp.o:	../../perlp/perlp.cpp
	$(CPPC) $(CPPC_ARGS) $(INCLUDES) -o $@ $?
perlp:	perlp.o showver.o install.o MWRegUtl.o
	$(LD) $(LD_ARGS) -o $@ perlp.o showver.o install.o MWRegUtl.o $(LIBRARIES)

# pfoped
pfoped.o:	../../pfoped/pfoped.cpp
	$(CPPC) $(CPPC_ARGS) $(INCLUDES) -o $@ $?
pfoped:	pfoped.o MWRegUtl.o showver.o
	$(LD) $(LD_ARGS) -o $@ pfoped.o MWRegUtl.o showver.o $(LIBRARIES)

# ptime
ptime.o:	../../ptime/ptime.cpp
	$(CPPC) $(CPPC_ARGS) $(INCLUDES) -o $@ $?
ptime:	ptime.o MLCmdArg.o showver.o
	$(LD) $(LD_ARGS) -o $@ ptime.o MLCmdArg.o showver.o $(LIBRARIES)

# pwd
pwd.o:	../../pwd/pwd.c
	$(CC) $(CC_ARGS) $(INCLUDES) -o $@ $?
pwd:	pwd.o showver.o
	$(LD) $(LD_ARGS) -o $@ pwd.o showver.o $(LIBRARIES)

# rdempty
rdempty.o:	../../rdempty/rdempty.cpp
	$(CPPC) $(CPPC_ARGS) $(INCLUDES) -o $@ $?
rdempty:	rdempty.o showver.o
	$(LD) $(LD_ARGS) -o $@ rdempty.o showver.o $(LIBRARIES)

# slsw
slsw.o:	../../slsw/slsw.c
	$(CC) $(CC_ARGS) $(INCLUDES) -o $@ $?
slsw:	slsw.o showver.o
	$(LD) $(LD_ARGS) -o $@ slsw.o showver.o $(LIBRARIES)

# strbl
strbl.o:	../../strbl/strbl.cpp
	$(CPPC) $(CPPC_ARGS) $(INCLUDES) -o $@ $?
strbl:	strbl.o showver.o
	$(LD) $(LD_ARGS) -o $@ strbl.o showver.o $(LIBRARIES)

# stripcr
stripcr.o:	../../stripcr/stripcr.c
	$(CC) $(CC_ARGS) $(INCLUDES) -o $@ $?
stripcr:	stripcr.o showver.o
	$(LD) $(LD_ARGS) -o $@ stripcr.o showver.o $(LIBRARIES)

# textsid
textsid.o:	../../textsid/textsid.c
	$(CC) $(CC_ARGS) $(INCLUDES) -o $@ $?
textsid:	textsid.o showver.o
	$(LD) $(LD_ARGS) -o $@ textsid.o showver.o $(LIBRARIES)

# userid
userid.o:	../../userid/userid.c
	$(CC) $(CC_ARGS) $(INCLUDES) -o $@ $?
userid:	userid.o showver.o
	$(LD) $(LD_ARGS) -o $@ userid.o showver.o $(LIBRARIES)

# whereis
whereis.o:	../../whereis/whereis.cpp
	$(CPPC) $(CPPC_ARGS) $(INCLUDES) -I$(UNIXEM)/include -o $@ $?
#whereis:	whereis.o showver.o derrpath.o dirend.o direndch.o makepath.o splpath.o strcch.o streqlen.o MWVerInf.o
#	$(LD) $(LD_ARGS) -o $@ whereis.o showver.o derrpath.o dirend.o direndch.o makepath.o splpath.o strcch.o streqlen.o MWVerInf.o $(LIBRARIES)
whereis:	whereis.o showver.o 
	$(LD) $(LD_ARGS) -o $@ whereis.o showver.o $(LIBRARIES)

################################################################################
